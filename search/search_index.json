{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"prefect-soda-cloud","text":"<p>Collection of Prefect tasks to interact with Soda Cloud APIs.</p>"},{"location":"#resources","title":"Resources","text":"<p>For more tips on how to use tasks and flows in a Collection, check out Using Collections!</p>"},{"location":"#installation","title":"Installation","text":"<p>Install <code>prefect-soda-cloud</code> with <code>pip</code>:</p> <pre><code>pip install prefect-soda-cloud\n</code></pre> <p>Requires an installation of Python 3.8+.</p> <p>We recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.</p> <p>These tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the Prefect documentation.</p>"},{"location":"#examples","title":"Examples","text":"<p>Note, to use the <code>load</code> method on Blocks, you must already have a block document saved through code or saved through the UI.</p> <p>Below is an example on saving block documents through code.</p> save_soda_cloud_credentials_as_block.py<pre><code>from prefect_soda_cloud import SodaCloudCredentials\n\nSodaCloudCredentials(\n    user_or_api_key_id=\"&lt;username or API key ID&gt;\",\n    pwd_or_api_key_secret=\"&lt;password or API key secret&gt;\"\n).save(\"your_block_fancy_name\")\n</code></pre> save_soda_cloud_auth_config_as_block.py<pre><code>from prefect_soda_cloud import SodaCloudAuthConfig, SodaCloudCredentials\n\n# Assuming you have already registered your Soda Cloud credentials in a block, you can load it\ncreds = SodaCloudCredentials.load(\"your_block_fancy_name\")\n\nSodaCloudAuthConfig(\n    api_base_url=\"https://cloud.soda.io\",\n    creds=creds\n).save(\"another_fancy_name\")\n</code></pre> <p>Registering blocks</p> <p>Register blocks in this module to view and edit them on Prefect Cloud:</p> <pre><code>prefect block register -m prefect_soda_cloud\n</code></pre> <p>A list of available blocks in <code>prefect-soda-cloud</code> and their setup instructions can be found here.</p>"},{"location":"#feedback","title":"Feedback","text":"<p>If you encounter any bugs while using <code>prefect-soda-cloud</code>, feel free to open an issue in the prefect-soda-cloud repository.</p> <p>If you have any questions or issues while using <code>prefect-soda-cloud</code>, you can find help in either the Prefect Discourse forum or the Prefect Slack community.</p> <p>Feel free to star or watch <code>prefect-soda-cloud</code> for updates too!</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you'd like to help contribute to fix an issue or add a feature to <code>prefect-soda-cloud</code>, please propose changes through a pull request from a fork of the repository.</p> <p>Here are the steps:</p> <ol> <li>Fork the repository</li> <li>Clone the forked repository</li> <li>Install the repository and its dependencies: <pre><code>pip install -e \".[dev]\"\n</code></pre></li> <li>Make desired changes</li> <li>Add tests</li> <li>Insert an entry to CHANGELOG.md</li> <li>Install <code>pre-commit</code> to perform quality checks prior to commit: <pre><code>pre-commit install\n</code></pre></li> <li><code>git commit</code>, <code>git push</code>, and create a pull request</li> </ol>"},{"location":"auth_config/","title":"Credentials & Auth config","text":""},{"location":"auth_config/#prefect_soda_cloud.auth_config","title":"<code>prefect_soda_cloud.auth_config</code>","text":"<p>This blocks can be used to store credentials that will be used to authenticate to Soda Cloud APIs.</p>"},{"location":"auth_config/#prefect_soda_cloud.auth_config-classes","title":"Classes","text":""},{"location":"auth_config/#prefect_soda_cloud.auth_config.SodaCloudAuthConfig","title":"<code>SodaCloudAuthConfig</code>","text":"<p>             Bases: <code>Block</code></p> <p>This block can be used to store the configuration details required to interact with Soda Cloud and its APIs.</p> <p>Attributes:</p> Name Type Description <code>api_base_url</code> <code>str</code> <p>Soda Cloud base URL.</p> <code>creds</code> <code>SodaCloudCredentials</code> <p><code>SodaCloudCredentials</code> that will be used to authenticate to Soda Cloud.</p> <code>wait_secs_between_api_calls</code> <code>Optional[int]</code> <p>The number of seconds to wait between API calls. Default to <code>10</code>. Must be &gt;= 0.</p> <pre><code>from prefect_soda_cloud import (\n    SodaCloudAuthConfig,\n    SodaCloudCredentials\n)\n\nauth_config = SodaCloudAuthConfig(\n    api_base_url=\"https://cloud.soda.io\",\n    creds=SodaCloudCredentials(\n        user_or_api_key_id=\"user\",\n        pwd_or_api_key_secret=\"pwd\"\n    ),\n    wait_secs_between_api_calls=1\n)\n</code></pre> Source code in <code>prefect_soda_cloud/auth_config.py</code> <pre><code>class SodaCloudAuthConfig(Block):\n    \"\"\"\n    This block can be used to store the configuration details\n    required to interact with Soda Cloud and its APIs.\n\n    Attributes:\n        api_base_url: Soda Cloud base URL.\n        creds: `SodaCloudCredentials` that\n            will be used to authenticate to Soda Cloud.\n        wait_secs_between_api_calls: The number of seconds to\n            wait between API calls. Default to `10`. Must be &gt;= 0.\n\n    Example:\n    ```python\n    from prefect_soda_cloud import (\n        SodaCloudAuthConfig,\n        SodaCloudCredentials\n    )\n\n    auth_config = SodaCloudAuthConfig(\n        api_base_url=\"https://cloud.soda.io\",\n        creds=SodaCloudCredentials(\n            user_or_api_key_id=\"user\",\n            pwd_or_api_key_secret=\"pwd\"\n        ),\n        wait_secs_between_api_calls=1\n    )\n    ```\n    \"\"\"\n\n    _block_type_name = \"Soda Cloud Auth Config\"\n    _logo_url = \"https://avatars.githubusercontent.com/u/45313710?s=200&amp;v=4\"  # noqa\n    _documentation_url = \"https://AlessandroLollo.github.io/prefect-soda-cloud/blocks/#prefect-soda-cloud.auth_config.SodaCloudAuthConfig\"  # noqa\n\n    api_base_url: str = Field(\n        name=\"Soda Cloud Base API URL\",\n        default=\"https://cloud.soda.io\",\n        description=\"Soda Cloud Base API URL.\",\n    )\n    creds: SodaCloudCredentials\n    wait_secs_between_api_calls: Optional[int] = Field(\n        name=\"Wait time between API calls\",\n        default=10,\n        description=\"Wait time in seconds between API calls. Must be &gt;=0.\",\n    )\n\n    @validator(\"wait_secs_between_api_calls\")\n    def _validate_wait_secs_between_api_calls(cls, value: int) -&gt; int:\n        \"\"\"\n        TODO\n        \"\"\"\n        if value &lt; 0:\n            raise ValueError(\"wait_secs_between_api_calls must be &gt;= 0\")\n        return value\n\n    def get_client(self, logger: Logger) -&gt; SodaCloudClient:\n        \"\"\"\n        Returns a `SodaCloudClient` object.\n\n        Args:\n            logger (Logger): A configured logger.\n\n        Returns:\n            A `SodaCloudClient` object.\n        \"\"\"\n        return SodaCloudClient(\n            api_base_url=self.api_base_url,\n            username=self.creds.user_or_api_key_id,\n            password=self.creds.pwd_or_api_key_secret.get_secret_value(),\n            logger=logger,\n            wait_secs_between_api_calls=self.wait_secs_between_api_calls,\n        )\n</code></pre>"},{"location":"auth_config/#prefect_soda_cloud.auth_config.SodaCloudAuthConfig-functions","title":"Functions","text":""},{"location":"auth_config/#prefect_soda_cloud.auth_config.SodaCloudAuthConfig.get_client","title":"<code>get_client</code>","text":"<p>Returns a <code>SodaCloudClient</code> object.</p> <p>Parameters:</p> Name Type Description Default <code>logger</code> <code>Logger</code> <p>A configured logger.</p> required <p>Returns:</p> Type Description <code>SodaCloudClient</code> <p>A <code>SodaCloudClient</code> object.</p> Source code in <code>prefect_soda_cloud/auth_config.py</code> <pre><code>def get_client(self, logger: Logger) -&gt; SodaCloudClient:\n    \"\"\"\n    Returns a `SodaCloudClient` object.\n\n    Args:\n        logger (Logger): A configured logger.\n\n    Returns:\n        A `SodaCloudClient` object.\n    \"\"\"\n    return SodaCloudClient(\n        api_base_url=self.api_base_url,\n        username=self.creds.user_or_api_key_id,\n        password=self.creds.pwd_or_api_key_secret.get_secret_value(),\n        logger=logger,\n        wait_secs_between_api_calls=self.wait_secs_between_api_calls,\n    )\n</code></pre>"},{"location":"auth_config/#prefect_soda_cloud.auth_config.SodaCloudCredentials","title":"<code>SodaCloudCredentials</code>","text":"<p>             Bases: <code>Block</code></p> <p>This block contains sensitive informations that will be used during the authentication flow with Soda Cloud. Please refer to Soda Cloud docs for more information about authentication.</p> <p>Attributes:</p> Name Type Description <code>user_or_api_key_id</code> <code>str</code> <p>Username or API Key ID.</p> <code>pwd_or_api_key_secret</code> <code>SecretStr</code> <p>Password or API Key Secret.</p> <pre><code>from prefect_soda_cloud import SodaCloudCredentials\n\ncreds = SodaCloudCredentials(\n    user_or_api_key_id=\"user\",\n    pwd_or_api_key_secret=\"pwd\"\n)\n</code></pre> Source code in <code>prefect_soda_cloud/auth_config.py</code> <pre><code>class SodaCloudCredentials(Block):\n    \"\"\"\n    This block contains sensitive informations\n    that will be used during the authentication flow\n    with Soda Cloud.\n    Please refer to\n    [Soda Cloud docs](https://docs.soda.io/api-docs/public-cloud-api-v1.html#/operations/GET/api/v1/test-login)\n    for more information about authentication.\n\n    Attributes:\n        user_or_api_key_id: Username or API Key ID.\n        pwd_or_api_key_secret: Password or API Key Secret.\n\n    Example:\n    ```python\n    from prefect_soda_cloud import SodaCloudCredentials\n\n    creds = SodaCloudCredentials(\n        user_or_api_key_id=\"user\",\n        pwd_or_api_key_secret=\"pwd\"\n    )\n    ```\n    \"\"\"  # noqa: E501\n\n    _block_type_name = \"Soda Cloud Credentials\"\n    _logo_url = \"https://avatars.githubusercontent.com/u/45313710?s=200&amp;v=4\"  # noqa\n    _documentation_url = \"https://AlessandroLollo.github.io/prefect-soda-cloud/blocks/#prefect-soda-cloud.auth_config.SodaCloudCredentials\"  # noqa\n\n    user_or_api_key_id: str = Field(\n        name=\"Username or API Key ID\",\n        default=None,\n        description=\"Soda Cloud username or API Key ID.\",\n    )\n    pwd_or_api_key_secret: SecretStr = Field(\n        name=\"Password or API Key Secret\",\n        description=\"Soda Cloud password or API Key Secret.\",\n    )\n</code></pre>"},{"location":"blocks_catalog/","title":"Blocks catalog","text":"<p>Below is a list of Blocks available for registration in <code>prefect-soda-cloud</code>.</p> <p>To register blocks in this module to view and edit them on Prefect Cloud, first install the required packages, then <pre><code>prefect block register -m prefect_soda_cloud\n</code></pre> Note, to use the <code>load</code> method on Blocks, you must already have a block document saved through code or saved through the UI.</p>"},{"location":"blocks_catalog/#auth-config-module","title":"Auth Config Module","text":"<p>SodaCloudCredentials</p> <p>This block contains sensitive informations that will be used during the authentication flow with Soda Cloud. Please refer to Soda Cloud docs for more information about authentication.</p> <p>To load the SodaCloudCredentials: <pre><code>from prefect import flow\nfrom prefect_soda_cloud.auth_config import SodaCloudCredentials\n\n@flow\ndef my_flow():\n    my_block = SodaCloudCredentials.load(\"MY_BLOCK_NAME\")\n\nmy_flow()\n</code></pre> SodaCloudAuthConfig</p> <p>This block can be used to store the configuration details required to interact with Soda Cloud and its APIs.</p> <p>To load the SodaCloudAuthConfig: <pre><code>from prefect import flow\nfrom prefect_soda_cloud.auth_config import SodaCloudAuthConfig\n\n@flow\ndef my_flow():\n    my_block = SodaCloudAuthConfig.load(\"MY_BLOCK_NAME\")\n\nmy_flow()\n</code></pre> For additional examples, check out the Auth Config Module under Examples Catalog.</p>"},{"location":"examples_catalog/","title":"Examples Catalog","text":"<p>Below is a list of examples for <code>prefect-soda-cloud</code>.</p>"},{"location":"tasks/","title":"Tasks","text":""},{"location":"tasks/#prefect_soda_cloud.tasks","title":"<code>prefect_soda_cloud.tasks</code>","text":"<p>Collection of tasks to interact with Soda Cloud</p>"},{"location":"tasks/#prefect_soda_cloud.tasks-classes","title":"Classes","text":""},{"location":"tasks/#prefect_soda_cloud.tasks-functions","title":"Functions","text":""},{"location":"tasks/#prefect_soda_cloud.tasks.get_scan_logs","title":"<code>get_scan_logs</code>","text":"<p>Retrieve scan logs from Soda Cloud given the scan ID.</p> <p>Parameters:</p> Name Type Description Default <code>scan_id</code> <code>str</code> <p>Scan identifier provided by Soda Cloud.</p> required <code>soda_cloud_auth_config</code> <code>SodaCloudAuthConfig</code> <p>The auth configuration to use to trigger the scan.</p> required <p>Returns:</p> Type Description <code>List[dict]</code> <p>A list of dict, each dict being a Soda Cloud log message.</p> Source code in <code>prefect_soda_cloud/tasks.py</code> <pre><code>@task\ndef get_scan_logs(\n    scan_id: str, soda_cloud_auth_config: SodaCloudAuthConfig\n) -&gt; List[dict]:\n    \"\"\"\n    Retrieve scan logs from Soda Cloud given the scan ID.\n\n    Args:\n        scan_id: Scan identifier provided by Soda Cloud.\n        soda_cloud_auth_config: The auth configuration to use to trigger the scan.\n\n    Returns:\n        A list of dict, each dict being a Soda Cloud log message.\n    \"\"\"\n    soda_cloud_client = soda_cloud_auth_config.get_client(logger=get_run_logger())\n    scan_logs = soda_cloud_client.get_scan_logs(scan_id=scan_id)\n    return scan_logs\n</code></pre>"},{"location":"tasks/#prefect_soda_cloud.tasks.get_scan_status","title":"<code>get_scan_status</code>","text":"<p>Retrieve scan status from Soda Cloud given the scan ID.</p> <p>Parameters:</p> Name Type Description Default <code>scan_id</code> <code>str</code> <p>Scan identifier provided by Soda Cloud.</p> required <code>soda_cloud_auth_config</code> <code>SodaCloudAuthConfig</code> <p>The auth configuration to use to trigger the scan.</p> required <code>wait_for_scan_end</code> <code>bool</code> <p>Whether to wait for the scan execution to finish or not.</p> <code>False</code> <p>Returns:</p> Type Description <code>dict</code> <p>A dictionary that describes the status of the scan.</p> Source code in <code>prefect_soda_cloud/tasks.py</code> <pre><code>@task\ndef get_scan_status(\n    scan_id: str,\n    soda_cloud_auth_config: SodaCloudAuthConfig,\n    wait_for_scan_end: bool = False,\n) -&gt; dict:\n    \"\"\"\n    Retrieve scan status from Soda Cloud given the scan ID.\n\n    Args:\n        scan_id: Scan identifier provided by Soda Cloud.\n        soda_cloud_auth_config: The auth configuration to use to trigger the scan.\n        wait_for_scan_end: Whether to wait for the scan execution to finish or not.\n\n    Returns:\n        A dictionary that describes the status of the scan.\n    \"\"\"\n    soda_cloud_client = soda_cloud_auth_config.get_client(logger=get_run_logger())\n    scan_status = soda_cloud_client.get_scan_status(\n        scan_id=scan_id, wait_for_scan_end=wait_for_scan_end\n    )\n    return scan_status\n</code></pre>"},{"location":"tasks/#prefect_soda_cloud.tasks.trigger_scan","title":"<code>trigger_scan</code>","text":"<p>Trigger a scan given its name.</p> <p>Parameters:</p> Name Type Description Default <code>scan_name</code> <code>str</code> <p>The name of the scan to trigger.</p> required <code>soda_cloud_auth_config</code> <code>SodaCloudAuthConfig</code> <p>The auth configuration to use to trigger the scan.</p> required <p>Returns:</p> Type Description <code>str</code> <p>The Scan identifier.</p> <pre><code>from prefect_soda_cloud import SodaCloudAuthConfig, SodaCloudCredentials\nfrom prefect_soda_cloud.tasks import trigger_scan\n\ncreds = SodaCloudCredentials(\n    user_or_api_key_id=\"the_user\",\n    pwd_or_api_key_secret=\"the_password\"\n)\n\nauth_config = SodaCloudAuthConfig(\n    api_base_url=\"https://cloud.soda.io\",\n    creds=creds\n)\n\nscan_id = trigger_scan(\n    soda_cloud_auth_config=auth_config,\n    data_timestamp=None\n)\n</code></pre> Source code in <code>prefect_soda_cloud/tasks.py</code> <pre><code>@task\ndef trigger_scan(\n    scan_name: str,\n    soda_cloud_auth_config: SodaCloudAuthConfig,\n    data_timestamp: Optional[datetime] = None,\n) -&gt; str:\n    \"\"\"\n    Trigger a scan given its name.\n\n    Args:\n        scan_name: The name of the scan to trigger.\n        soda_cloud_auth_config: The auth configuration to use to trigger the scan.\n\n    Returns:\n        The Scan identifier.\n\n    Example:\n    ```python\n    from prefect_soda_cloud import SodaCloudAuthConfig, SodaCloudCredentials\n    from prefect_soda_cloud.tasks import trigger_scan\n\n    creds = SodaCloudCredentials(\n        user_or_api_key_id=\"the_user\",\n        pwd_or_api_key_secret=\"the_password\"\n    )\n\n    auth_config = SodaCloudAuthConfig(\n        api_base_url=\"https://cloud.soda.io\",\n        creds=creds\n    )\n\n    scan_id = trigger_scan(\n        soda_cloud_auth_config=auth_config,\n        data_timestamp=None\n    )\n    ```\n    \"\"\"\n    soda_cloud_client = soda_cloud_auth_config.get_client(logger=get_run_logger())\n    scan_id = soda_cloud_client.trigger_scan(\n        scan_name=scan_name, data_timestamp=data_timestamp\n    )\n\n    return scan_id\n</code></pre>"}]}